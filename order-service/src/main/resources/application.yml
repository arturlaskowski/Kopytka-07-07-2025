spring:
  application:
    name: order-service
  datasource:
    url: jdbc:postgresql://localhost:5432/kopytkadb?currentSchema=order_schema
    driver-class-name: org.postgresql.Driver
    username: order_user
    password: order_password
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
 #   show-sql: true
    open-in-view: false
    properties:
      hibernate:
        "[default_schema]": order_schema
        "[format_sql]": true

server:
  port: 8580

# Kopytka configurations
kopytka:
  scheduling:
    enabled: false  # No scheduled tasks in order service

order-service:
  kafka:
    group-id: order-topic-consumer
    topics:
      customer-event: customer-events
      payment-command: payment-commands
      payment-event: payment-events
      restaurant-order-command: restaurant-order-commands
      restaurant-order-event: restaurant-order-events

kafka-config:
  bootstrap-servers: localhost:9092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  num-of-partitions: 1
  replication-factor: 1

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5

kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  auto-offset-reset: earliest
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: true
  auto-startup: true
  concurrency-level: 3
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150